{"version":3,"sources":["components/reducer/ballReducer.js","components/provider/Context.jsx","components/startScreen/Title.jsx","components/playScreen/Score.jsx","components/playScreen/LogList.jsx","components/playScreen/PlayInning.jsx","components/playScreen/Stadium.jsx","components/playScreen/CurrentPlayer.jsx","routes/PlayScreen.jsx","components/startScreen/Caption.jsx","components/startScreen/Team.jsx","components/startScreen/Game.jsx","components/startScreen/GameList.jsx","routes/StartScreen.jsx","theme.js","App.jsx","index.js"],"names":["ballReducer","ballCnt","action","type","S","B","O","HitInfo","payload","H","boardHistory","BoardHistoryContext","createContext","TitleDiv","styled","div","theme","colors","white","screenType","PLAY","fontSizes","XXL","Title","ScoreDiv","TeamDiv","TeamSingleDiv","AwayTeam","HomeTeam","TeamScore","TeamCurrent","XS","orange","VSDiv","L","lightGray","Score","useContext","GlobalContext","isHome","myTeamName","counterTeamName","LogBoxDiv","LogListWrap","LogListDiv","XXS","LogHitter","green","LogIdx","black","TXS","LogName","LogBoard","LogLine","LogLineMsg","gray","LogList","logArr","setLogArr","myTeam","currHitter","setCurrHitter","currTeamLog","setCurrTeamLog","setTotalOutCount","useState","batOrder","setBatOrder","useEffect","console","log","out","totalOutCount","hit","LogBoxes","map","logBox","idx","sCnt","bCnt","battingOrder","name","ele","i","LogBox","PlayInningDiv","Span","span","PlayInning","props","currInning","setCurrInning","inningTop","setInningTop","playPitch","dispatch","randomHit","random","Math","getRandomNum","StadiumDiv","PlayDiv","PlayBoardDiv","PlayBoard","BoardTag","M","BoardNum","PlayerDiv","Player","PlayButton","button","Stadium","PlayBoardTemp","arr","Array","fill","setTimeout","onClick","CurrentPlayerDiv","PlayerName","PitcherNum","yellow","PlayerRatio","PlayerTag","CurrentPlayer","homeTeam","awayTeam","currPitcher","setCurrPitcher","homeTeamPitcher","players","filter","player","pitcher","awayTeamPitcher","backNumber","PlayScreenDiv","PlayScreen","setMyTeam","setMyTeamName","setCounterTeam","setCounterTeamName","teamName","Caption","message","PlayableContext","playable","XL","darkGray","Team","game","setPlayable","setAwayTeam","setHomeTeam","setIsHome","history","useHistory","handleClickTeam","a","teamId","homeTeamId","awayTeamId","axios","get","gameId","data","homeInfo","userSelected","push","awayTeamName","homeTeamName","GameLi","li","Wrapper","MatchNumber","Versus","Game","GameUl","ul","GamesWrapper","GameList","games","setGames","fetchData","StartDiv","StartScreen","yellowOrange","START","AppDiv","GlobalStyle","createGlobalStyle","App","useReducer","counterTeam","baseballState","teamInfo","Provider","value","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb7cb966.chunk.js","sourcesContent":["const ballReducer = (ballCnt, action) => {\n  switch (action.type) {\n    case 'hitS':\n      return { ...ballCnt, S: ballCnt.S + 1 };\n\n    case 'hitB':\n      return { ...ballCnt, B: ballCnt.B + 1 };\n\n    case 'hitO':\n      return {\n        ...ballCnt,\n        S: 0,\n        B: 0,\n        O: ballCnt.O + 1,\n        HitInfo: action.payload,\n      };\n\n    case 'hitH':\n      return {\n        ...ballCnt,\n        S: 0,\n        B: 0,\n        H: ballCnt.H + 1,\n      };\n\n    case 'resetAll':\n      return { ...ballCnt, S: 0, B: 0, O: 0, H: 0 };\n\n    case 'hitInfo':\n      return { ...ballCnt, HitInfo: action.payload };\n\n    default:\n      return null;\n  }\n};\n\nexport default ballReducer;\n","import { createContext } from 'react';\n\nconst boardHistory = {\n  S: 0,\n  B: 0,\n  O: 0,\n  H: 0,\n  HitInfo: ' ',\n};\n\nconst BoardHistoryContext = createContext();\n\nexport { boardHistory, BoardHistoryContext };\n","import styled from 'styled-components';\n\nconst Title = ({ type }) => (\n  <TitleDiv type={type}>BASEBALL GAME ONLINE</TitleDiv>\n);\n\nconst TitleDiv = styled.div`\n  margin: 18px 0;\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme, type }) =>\n    type === theme.screenType.PLAY ? theme.fontSizes.S : theme.fontSizes.XXL};\n  font-weight: 600;\n`;\n\nexport default Title;\n","import Title from '../startScreen/Title';\nimport styled from 'styled-components';\nimport { useContext } from 'react';\nimport { GlobalContext } from '../../App';\n\nconst Score = () => {\n  const { isHome, myTeamName, counterTeamName } = useContext(GlobalContext);\n\n  return (\n    <ScoreDiv>\n      <Title type='play' />\n      <TeamDiv>\n        <TeamSingleDiv>\n          {/* <AwayTeam>{counterTeamName}</AwayTeam> */}\n          {!isHome ? (\n            <AwayTeam>{myTeamName}</AwayTeam>\n          ) : (\n            <AwayTeam>{counterTeamName}</AwayTeam>\n          )}\n\n          {!isHome && <TeamCurrent>Player</TeamCurrent>}\n        </TeamSingleDiv>\n        <TeamScore>1</TeamScore>\n        <VSDiv>vs</VSDiv>\n        <TeamScore>5</TeamScore>\n        <TeamSingleDiv>\n          {/* <HomeTeam>Marvel</HomeTeam> */}\n          {isHome ? (\n            <HomeTeam>{myTeamName}</HomeTeam>\n          ) : (\n            <HomeTeam>{counterTeamName}</HomeTeam>\n          )}\n          {isHome && <TeamCurrent>Player</TeamCurrent>}\n        </TeamSingleDiv>\n      </TeamDiv>\n    </ScoreDiv>\n  );\n};\n\nconst ScoreDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-bottom: solid 4px white;\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nconst TeamDiv = styled.div`\n  display: flex;\n  font-size: ${({ theme }) => theme.fontSizes.XXL};\n  font-weight: 800;\n`;\n\nconst TeamSingleDiv = styled.div`\n  text-align: center;\n`;\nconst AwayTeam = styled.div``;\n\nconst HomeTeam = styled.div``;\n\nconst TeamScore = styled.div`\n  margin: 0 30px;\n`;\n\nconst TeamCurrent = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n  color: ${({ theme }) => theme.colors.orange};\n`;\n\nconst VSDiv = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.L};\n  color: ${({ theme }) => theme.colors.lightGray};\n`;\n\nexport default Score;\n","import styled from 'styled-components';\nimport { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../../App';\nimport { BoardHistoryContext } from '../provider/Context';\n\nconst LogList = () => {\n  const { ballCnt } = useContext(BoardHistoryContext);\n  const {\n    logArr,\n    setLogArr,\n    myTeam,\n    currHitter,\n    setCurrHitter,\n    currTeamLog,\n    setCurrTeamLog,\n    setTotalOutCount,\n  } = useContext(GlobalContext);\n  //Stadium에서 설정하면 한템포 빠를까 해 useContext로 올려버림\n  // const [logArr, setLogArr] = useState([]);\n  const [batOrder, setBatOrder] = useState(1);\n\n  useEffect(() => {\n    // setLogArr((logArr) => [...logArr, ballCnt]);\n    if (ballCnt.HitInfo === 'O') {\n      // console.log('현재 타자!', currHitter.id, currHitter);\n      console.log('🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥', ballCnt.HitInfo);\n      setBatOrder((batOrder) => batOrder + 1);\n      setCurrHitter({ ...currHitter, out: currHitter.out + 1 });\n      setCurrHitter(myTeam[batOrder]);\n      setCurrTeamLog([...currTeamLog, logArr]);\n      setLogArr([]);\n      // setTimeout(() => setLogArr([]), 3000);\n\n      setTotalOutCount((totalOutCount) => totalOutCount + 1);\n    }\n    //이 데이터가 오지 않아 잡지를 못함 이경우를 잡지를 못함...제발....\n    if (ballCnt.HitInfo === 'H') {\n      console.log('🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥', ballCnt.HitInfo);\n\n      setBatOrder((batOrder) => batOrder + 1);\n      setCurrHitter({ ...currHitter, hit: currHitter.hit + 1 });\n      //myTeam으로 가져올지 homeTeam으로 가져올지 모그렛음\n      setCurrHitter(myTeam[batOrder]);\n      setCurrTeamLog([...currTeamLog, logArr]);\n      setLogArr([]);\n      //3초 있다 지우면 H안타나 O한것도 지울 수 있을거라 생각\n      // setTimeout(() => setLogArr([]), 3000);\n    }\n  }, [ballCnt]);\n\n  const LogBoxes = () => {\n    if (currTeamLog) {\n      return currTeamLog.map((logBox, idx) => {\n        var sCnt = 0;\n        var bCnt = 0;\n        return (\n          <LogBoxDiv key={idx}>\n            <LogHitter>\n              {myTeam[idx].battingOrder}번타자 {myTeam[idx].name}\n            </LogHitter>\n            <>\n              {logBox?.map((ele, i) => {\n                if (\n                  ele.HitInfo !== ' ' &&\n                  (ele.HitInfo === 'S' || ele.HitInfo === 'B')\n                ) {\n                  return (\n                    <LogLine key={i}>\n                      <LogIdx>{i}</LogIdx>\n                      <LogName>\n                        {ele.HitInfo === 'S' ? '스트라이크' : '볼'}\n                      </LogName>\n                      <LogBoard>\n                        S{ele.S} B{ele.B}\n                      </LogBoard>\n                    </LogLine>\n                  );\n                }\n                // 데이터가 정확하게 오면 위처럼 map돌릴 필요가 없고 이렇게 돌리면 됨\n                // if (ele.HitInfo === 'O') {\n                //   return <LogLineMsg key={i}>⚾️ 아웃 ⚾️</LogLineMsg>;\n                // }\n                // if (ele.HitInfo === 'H') {\n                //   return <LogLineMsg key={i}>🥎 안타 🥎</LogLineMsg>;\n                // }\n              })}\n            </>\n            <>\n              {logBox?.map((ele, i) => {\n                if (ele.HitInfo === 'S') {\n                  sCnt += 1;\n                  if (sCnt === 3) {\n                    return <LogLineMsg key={i}>⚾️ 아웃 ⚾️</LogLineMsg>;\n                  }\n                } else if (ele.HitInfo === 'B') {\n                  bCnt += 1;\n                  if (bCnt === 4) {\n                    return <LogLineMsg key={i}>🥎 안타 🥎</LogLineMsg>;\n                  }\n                } else return <></>;\n              })}\n            </>\n          </LogBoxDiv>\n        );\n      });\n    } else return <></>;\n  };\n  const LogBox = () => {\n    if (logArr) {\n      console.log('box를 뿌릴때 currTeamLog', currTeamLog);\n      console.log('box- logArr', logArr);\n\n      return (\n        <LogBoxDiv>\n          <LogHitter>\n            {currHitter?.battingOrder}번타자 {currHitter?.name}\n          </LogHitter>\n          <>\n            {logArr.map((ele, i) => {\n              if (\n                ele.HitInfo !== ' ' &&\n                (ele.HitInfo === 'S' || ele.HitInfo === 'B')\n              ) {\n                return (\n                  <LogLine key={i}>\n                    <LogIdx>{i}</LogIdx>\n                    <LogName>\n                      {ele.HitInfo === 'S' ? '스트라이크' : '볼'}\n                    </LogName>\n                    <LogBoard>\n                      S{ele.S} B{ele.B}\n                    </LogBoard>\n                  </LogLine>\n                );\n              }\n              if (ele.HitInfo === 'O') {\n                return <LogLineMsg key={i}>⚾️ 아웃 ⚾️</LogLineMsg>;\n              }\n              if (ele.HitInfo === 'H') {\n                return <LogLineMsg key={i}>🥎 안타 🥎</LogLineMsg>;\n              }\n            })}\n          </>\n        </LogBoxDiv>\n      );\n    } else return <></>;\n  };\n\n  return (\n    <LogListWrap>\n      <LogListDiv>\n        <LogBox />\n        <LogBoxes />\n      </LogListDiv>\n    </LogListWrap>\n  );\n};\nconst LogBoxDiv = styled.div``;\nconst LogListWrap = styled.div`\n  padding: 20px 20px;\n  border: solid 4px white;\n  border-top: none;\n  border-right: none;\n`;\nconst LogListDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 550px;\n  font-size: ${({ theme }) => theme.fontSizes.XXS};\n  overflow: auto;\n`;\nconst LogHitter = styled.div`\n  margin: 10px 0;\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.green};\n`;\nconst LogIdx = styled.div`\n  width: 18px;\n  height: 18px;\n  padding: 2px 6px 0 6px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.black};\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 20px;\n  font-size: ${({ theme }) => theme.fontSizes.TXS};\n  font-weight: 700;\n`;\nconst LogName = styled.div`\n  width: 110px;\n  margin-right: 30px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.white};\n`;\nconst LogBoard = styled.div`\n  width: 52px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.lightGray};\n  font-weight: 500;\n`;\nconst LogLine = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 7px 0;\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nconst LogLineMsg = styled.div`\n  padding: 0 0 0 40px;\n  color: ${({ theme }) => theme.colors.gray};\n`;\n\nexport default LogList;\n","import { useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { GlobalContext } from '../../App';\n\nconst PlayInning = (props) => {\n  const {\n    isHome,\n    currInning,\n    setCurrInning,\n    totalOutCount,\n    setTotalOutCount,\n    inningTop,\n    setInningTop,\n  } = useContext(GlobalContext);\n\n  if (totalOutCount === 0) {\n    setInningTop(true);\n  }\n\n  if (totalOutCount >= 3) {\n    if (totalOutCount === 3) {\n      setInningTop(false);\n      // 공격, 수비를 바꿔주는 로직 추가하기\n    }\n    if (totalOutCount === 6) {\n      setCurrInning(currInning + 1);\n      setTotalOutCount(0);\n    }\n  }\n  return (\n    <PlayInningDiv>\n      <Span>\n        {inningTop && isHome ? `${currInning}회초 수비` : ``}\n        {!inningTop && isHome ? `${currInning}회말 공격` : ``}\n\n        {inningTop && !isHome ? `${currInning}회초 공격` : ``}\n        {!inningTop && !isHome ? `${currInning}회말 수비` : ``}\n      </Span>\n    </PlayInningDiv>\n  );\n};\n\nconst PlayInningDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n  padding: 5px 12px;\n  border: dotted 2px white;\n  border-radius: 0.5rem;\n  height: fit-content;\n`;\n\nconst Span = styled.span`\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme }) => theme.fontSizes.S};\n  font-weight: 700;\n`;\n\nexport default PlayInning;\n","import styled from 'styled-components';\nimport { useEffect, useContext } from 'react';\nimport { BoardHistoryContext } from '../provider/Context';\nimport PlayInning from './PlayInning';\nimport { GlobalContext } from '../../App';\n\nconst Stadium = () => {\n  const { ballCnt, dispatch } = useContext(BoardHistoryContext);\n  const { logArr, setLogArr } = useContext(GlobalContext);\n  const PlayBoardTemp = ({ type }) => {\n    if (type === 'S') {\n      const arr = new Array(ballCnt.S).fill(' 🟡');\n      return <>{arr}</>;\n    } else if (type === 'B') {\n      const arr = new Array(ballCnt.B).fill(' 🟢');\n      return <>{arr}</>;\n    } else if (type === 'O') {\n      const arr = new Array(ballCnt.O).fill(' 🔴');\n      return <>{arr}</>;\n    }\n  };\n\n  useEffect(() => {\n    setLogArr((logArr) => [...logArr, ballCnt]);\n    // 여기때문에 다 엉킨듯 합니다....\n    if (ballCnt.S === 3) {\n      setTimeout(() => dispatch({ type: 'hitO', payload: 'O' }), 1000);\n    }\n    if (ballCnt.B === 4) {\n      setTimeout(() => dispatch({ type: 'hitH', payload: 'H' }), 1000);\n    }\n    if (ballCnt.O === 3) {\n      setTimeout(() => dispatch({ type: 'resetAll' }), 1000);\n    }\n  }, [ballCnt]);\n\n  return (\n    <StadiumDiv>\n      <PlayDiv>\n        <PlayBoardDiv>\n          <PlayBoard>\n            <BoardTag>S</BoardTag>\n            <BoardNum>\n              <PlayBoardTemp type='S' />\n            </BoardNum>\n          </PlayBoard>\n          <PlayBoard>\n            <BoardTag>B</BoardTag>\n            <BoardNum>\n              <PlayBoardTemp type='B' />\n            </BoardNum>\n          </PlayBoard>\n          <PlayBoard>\n            <BoardTag>O</BoardTag>\n            <BoardNum>\n              <PlayBoardTemp type='O' />\n            </BoardNum>\n          </PlayBoard>\n        </PlayBoardDiv>\n        <PlayInning />\n      </PlayDiv>\n      <PlayerDiv>\n        <Player />\n      </PlayerDiv>\n      <PlayButton onClick={() => playPitch(ballCnt, dispatch)}>\n        PITCH\n      </PlayButton>\n    </StadiumDiv>\n  );\n};\n\nconst playPitch = (ballCnt, dispatch) => {\n  const tempBoardLst = ['S', 'B', 'H'];\n  const getRandomNum = () => {\n    const random = Math.random() * 10;\n    if (random >= 3) return 0;\n    if (random >= 1) return 1;\n    return 2;\n  };\n  const randomHit = tempBoardLst[getRandomNum()];\n\n  dispatch({ type: 'hitInfo', payload: randomHit });\n  dispatch({ type: 'hit' + randomHit });\n};\n\nconst StadiumDiv = styled.div`\n  box-sizing: border-box;\n  opacity: 90%;\n  background-image: url('./baseballRound.jpg');\n  background-position: center;\n`;\nconst PlayDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst PlayBoardDiv = styled.div`\n  margin: 20px 25px;\n`;\nconst PlayBoard = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BoardTag = styled.div`\n  margin-right: 20px;\n  color: white;\n  font-size: ${({ theme }) => theme.fontSizes.M};\n  font-weight: 600;\n`;\nconst BoardNum = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.S};\n`;\nconst PlayerDiv = styled.div`\n  position: absolute;\n`;\nconst Player = styled.div`\n  position: relative;\n`;\nconst PlayButton = styled.button`\n  position: relative;\n  left: 465px;\n  top: 130px;\n  padding: 10px 40px;\n  text-align: center;\n  background-color: black;\n  color: ${({ theme }) => theme.colors.white};\n  border: dotted 2px white;\n  border-radius: 0.5rem;\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n  opacity: 80%;\n  cursor: pointer;\n  &:hover {\n    opacity: none;\n    background-color: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\n\nexport default Stadium;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { GlobalContext } from '../../App';\n\nconst CurrentPlayer = () => {\n  const {\n    homeTeam,\n    awayTeam,\n    inningTop,\n    currPitcher,\n    setCurrPitcher,\n  } = useContext(GlobalContext);\n\n  const homeTeamPitcher = homeTeam.players.filter(\n    (player) => player.pitcher === true\n  )[0];\n  const awayTeamPitcher = awayTeam.players.filter(\n    (player) => player.pitcher === true\n  )[0];\n\n  setCurrPitcher(inningTop ? homeTeamPitcher : awayTeamPitcher);\n\n  return (\n    <CurrentPlayerDiv>\n      <PlayerTag>PITCHER</PlayerTag>\n      <Player>\n        <PlayerName>{currPitcher?.name}</PlayerName>\n        <PitcherNum>#{currPitcher?.backNumber}</PitcherNum>\n      </Player>\n      <PlayerTag>HITTER</PlayerTag>\n      <Player>\n        <PlayerName>캡틴아메</PlayerName>\n        <PlayerRatio>1타석 0안타</PlayerRatio>\n      </Player>\n    </CurrentPlayerDiv>\n  );\n};\n\nconst CurrentPlayerDiv = styled.div`\n  display: grid;\n  align-items: center;\n  padding: 20px 30px;\n  border: solid 4px white;\n  border-top: none;\n  border-right: none;\n`;\nconst Player = styled.div`\n  padding: 8px 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  text-align: center;\n`;\nconst PlayerName = styled.div`\n  color: ${({ theme }) => theme.colors.gray};\n  font-size: ${({ theme }) => theme.fontSizes.XXS};\n`;\nconst PitcherNum = styled.div`\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n`;\nconst PlayerRatio = styled.div`\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n`;\nconst PlayerTag = styled.div`\n  padding: 3px;\n  border: dotted 2px white;\n  border-radius: 0.5rem;\n  text-align: center;\n  color: white;\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n`;\n\nexport default CurrentPlayer;\n","import styled from 'styled-components';\nimport Score from '../components/playScreen/Score';\nimport LogList from '../components/playScreen/LogList';\nimport Stadium from '../components/playScreen/Stadium';\nimport CurrentPlayer from '../components/playScreen/CurrentPlayer';\nimport { useEffect, useContext } from 'react';\nimport { GlobalContext } from '../App';\n\nconst PlayScreen = (props) => {\n  const {\n    isHome,\n    homeTeam,\n    awayTeam,\n    setMyTeam,\n    setMyTeamName,\n    setCounterTeam,\n    setCounterTeamName,\n    setCurrHitter,\n  } = useContext(GlobalContext);\n\n  useEffect(() => setCurrHitter(awayTeam.players[0]), []);\n\n  if (isHome) {\n    setMyTeam(homeTeam.players);\n    setMyTeamName(homeTeam.teamName);\n    setCounterTeam(awayTeam.players);\n    setCounterTeamName(awayTeam.teamName);\n  } else {\n    setMyTeam(awayTeam.players);\n    setMyTeamName(awayTeam.teamName);\n    setCounterTeam(homeTeam.players);\n    setCounterTeamName(homeTeam.teamName);\n  }\n  return (\n    <PlayScreenDiv>\n      <Score />\n      <CurrentPlayer />\n      <Stadium />\n      <LogList />\n    </PlayScreenDiv>\n  );\n};\n\nconst PlayScreenDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1100px 300px;\n  grid-template-rows: 200px 600px;\n  width: 1400px;\n  height: 800px;\n  border: 0.5rem outset #ffffff;\n  border-radius: 12px;\n  outline-offset: 0.5rem;\n`;\n\nexport default PlayScreen;\n","import styled from 'styled-components';\nimport { useContext } from 'react';\nimport { PlayableContext } from '../../App';\n\nconst Caption = (props) => {\n  const { playable } = useContext(PlayableContext);\n  let message = '참가할 게임을 선택하세요!';\n  if (playable === false) {\n    message = '이미 선택된 팀입니다. 다른 팀을 선택해주세요!';\n  }\n  return <Span>{message}</Span>;\n};\n\nconst Span = styled.span`\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nexport default Caption;\n","import styled from 'styled-components';\nimport { useHistory } from 'react-router';\nimport { useContext } from 'react';\nimport { GlobalContext, PlayableContext } from '../../App';\nimport axios from 'axios';\n\nconst Team = ({ type, game }) => {\n  const { setPlayable } = useContext(PlayableContext);\n  const { setAwayTeam, setHomeTeam, setIsHome } = useContext(GlobalContext);\n  const history = useHistory();\n  const handleClickTeam = async () => {\n    let teamId;\n    if (type === 'home') {\n      teamId = game.homeTeamId;\n    } else {\n      teamId = game.awayTeamId;\n    }\n    try {\n      const { data } = await axios.get(\n        `http://13.209.109.186/baseball/games/${game.gameId}/${teamId}`\n      );\n      const [awayInfo, homeInfo] = [data.awayTeam, data.homeTeam];\n      setAwayTeam(awayInfo);\n      setHomeTeam(homeInfo);\n      homeInfo.userSelected && setIsHome(true);\n      history.push('/play-screen');\n    } catch {\n      setPlayable(false);\n    }\n  };\n\n  return type === 'away' ? (\n    <TeamDiv type={type} onClick={handleClickTeam}>\n      {game.awayTeamName}\n    </TeamDiv>\n  ) : (\n    <TeamDiv type={type} onClick={handleClickTeam}>\n      {game.homeTeamName}\n    </TeamDiv>\n  );\n};\n\nconst TeamDiv = styled.div`\n  /* font-size: ${({ theme }) => theme.fontSizes.XL}; */\n  font-size: 32px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.darkGray};\n  width: 180px;\n  text-align: ${({ type }) => (type === 'home' ? 'left' : 'right')};\n\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.green};\n  }\n`;\n\nexport default Team;\n","import styled from 'styled-components';\nimport Team from './Team';\n\nconst Game = ({ game }) => {\n  return (\n    <GameLi>\n      <Wrapper>\n        <MatchNumber>GAME {game.gameId}</MatchNumber>\n      </Wrapper>\n      <Wrapper>\n        <Team type='away' game={game} />\n        <Versus>vs</Versus>\n        <Team type='home' game={game} />\n      </Wrapper>\n    </GameLi>\n  );\n};\n\nconst GameLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.lightGray};\n  width: 100%;\n  height: 100px;\n  border-radius: 14px;\n  margin-bottom: 10px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst MatchNumber = styled.span`\n  color: red;\n  margin-bottom: 6px;\n`;\n\nconst Versus = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.XL};\n  margin: 0 40px;\n  display: flex;\n  align-items: center;\n  font-weight: bolder;\n  color: ${({ theme }) => theme.colors.gray};\n`;\nexport default Game;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Game from './Game';\n\nconst GameList = (props) => {\n  const [games, setGames] = useState([]);\n  const fetchData = async () => {\n    const { data: games } = await axios.get(\n      'http://13.209.109.186/baseball/games'\n    );\n    setGames(games);\n  };\n\n  useEffect(fetchData, []);\n\n  return (\n    <GameUl>\n      <GamesWrapper>\n        {games.map((game) => (\n          <Game key={game.gameId} game={game} />\n        ))}\n      </GamesWrapper>\n    </GameUl>\n  );\n};\n\nconst GameUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst GamesWrapper = styled.div`\n  width: 540px;\n  height: 320px;\n  overflow-y: scroll;\n`;\n\nexport default GameList;\n","import Caption from '../components/startScreen/Caption';\nimport GameList from '../components/startScreen/GameList';\nimport Title from '../components/startScreen/Title';\nimport styled from 'styled-components';\n\nconst StartScreen = (props) => {\n  return (\n    <StartDiv>\n      <Title />\n      <Caption />\n      <GameList />\n    </StartDiv>\n  );\n};\n\nconst StartDiv = styled.div`\n  margin: 0 auto;\n  max-width: 1440px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport default StartScreen;\n","const theme = {\n  fontSizes: {\n    TXS: '15px',\n    XXS: '20px',\n    XS: '25px',\n    S: '30px',\n    M: '35px',\n    L: '40px',\n    XL: '45px',\n    XXL: '50px',\n  },\n  colors: {\n    white: '#FFF',\n    black: '#333',\n    green: '#4f9202',\n    yellow: '#dec170',\n    yellowOrange: '#eabd57',\n    orange: '#eaa719',\n    gray: '#dbd6c3',\n    darkGray: '#333',\n    lightGray: '#bdbdbd',\n  },\n\n  screenType: {\n    START: 'start',\n    PLAY: 'play',\n  },\n};\n\nexport default theme;\n","import { useReducer, useState, createContext } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport ballReducer from './components/reducer/ballReducer';\nimport {\n  boardHistory,\n  BoardHistoryContext,\n} from './components/provider/Context';\nimport './App.css';\nimport PlayScreen from './routes/PlayScreen';\nimport StartScreen from './routes/StartScreen';\nimport theme from './theme';\nimport useToggle from './components/hooks/useToggle';\n\nfunction App() {\n  const [logArr, setLogArr] = useState([]);\n  const [ballCnt, dispatch] = useReducer(ballReducer, boardHistory);\n  const [playable, setPlayable] = useState(true);\n  const [myTeam, setMyTeam] = useState([]);\n  const [myTeamName, setMyTeamName] = useState('');\n  const [counterTeam, setCounterTeam] = useState([]);\n  const [counterTeamName, setCounterTeamName] = useState('');\n  const [homeTeam, setHomeTeam] = useState(null);\n  const [awayTeam, setAwayTeam] = useState(null);\n  const [currInning, setCurrInning] = useState(1);\n  const [currPitcher, setCurrPitcher] = useState(null);\n  const [currHitter, setCurrHitter] = useState(null);\n  const [currTeamLog, setCurrTeamLog] = useState([]);\n  const [isHome, setIsHome] = useState(false);\n  const [totalOutCount, setTotalOutCount] = useState(0);\n  const [inningTop, setInningTop] = useState(true);\n\n  const baseballState = {\n    teamInfo: {\n      logArr,\n      setLogArr,\n      myTeam,\n      setMyTeam,\n      myTeamName,\n      setMyTeamName,\n      counterTeam,\n      setCounterTeam,\n      counterTeamName,\n      setCounterTeamName,\n      homeTeam,\n      setHomeTeam,\n      awayTeam,\n      setAwayTeam,\n      currPitcher,\n      setCurrPitcher,\n      currHitter,\n      setCurrHitter,\n      currInning,\n      setCurrInning,\n      currTeamLog,\n      setCurrTeamLog,\n      isHome,\n      setIsHome,\n      totalOutCount,\n      setTotalOutCount,\n      inningTop,\n      setInningTop,\n    },\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalContext.Provider value={baseballState.teamInfo}>\n        <PlayableContext.Provider value={{ playable, setPlayable }}>\n          <GlobalStyle />\n          <BrowserRouter>\n            <Switch>\n              <AppDiv>\n                <Route path='/' exact>\n                  <StartScreen />\n                </Route>\n                <BoardHistoryContext.Provider value={{ ballCnt, dispatch }}>\n                  <Route path='/play-screen'>\n                    <PlayScreen />\n                  </Route>\n                </BoardHistoryContext.Provider>\n              </AppDiv>\n            </Switch>\n          </BrowserRouter>\n        </PlayableContext.Provider>\n      </GlobalContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nconst AppDiv = styled.div`\n  margin: 50px auto;\n  max-width: 1440px;\n`;\nconst GlobalStyle = createGlobalStyle`\n* {\n  padding:0; \n  margin:0;\n}\n\nbody{\n  box-sizing:border-box;\n  background-color:black;\n}\n\nol, ul {\n  list-style: none;\n}\n`;\n\nexport const PlayableContext = createContext();\nexport const GlobalContext = createContext();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}