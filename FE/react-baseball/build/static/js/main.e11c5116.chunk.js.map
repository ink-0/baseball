{"version":3,"sources":["components/reducer/ballReducer.js","components/provider/Context.jsx","components/startScreen/Title.jsx","components/playScreen/Score.jsx","components/playScreen/LogList.jsx","components/playScreen/PlayInning.jsx","components/playScreen/Stadium.jsx","components/playScreen/CurrentPlayer.jsx","routes/PlayScreen.jsx","components/startScreen/Caption.jsx","components/startScreen/Team.jsx","components/startScreen/Game.jsx","components/startScreen/GameList.jsx","routes/StartScreen.jsx","theme.js","App.jsx","index.js"],"names":["ballReducer","ballCnt","action","type","S","B","O","HitInfo","payload","H","boardHistory","BoardHistoryContext","createContext","TitleDiv","styled","div","theme","colors","white","screenType","PLAY","fontSizes","XXL","Title","ScoreDiv","TeamDiv","TeamSingleDiv","AwayTeam","HomeTeam","TeamScore","TeamCurrent","XS","orange","VSDiv","L","lightGray","Score","useContext","GlobalContext","isHome","myTeamName","counterTeamName","LogListDiv","LogBox","XXS","LogHitter","green","LogIdx","black","TXS","LogName","LogBoard","LogLine","LogLineMsg","gray","LogList","myTeam","homeTeam","currHitter","setCurrHitter","totalOutCount","setTotalOutCount","useState","logArr","setLogArr","batOrder","setBatOrder","console","log","useEffect","hit","LogCards","map","ele","i","PlayInningDiv","Span","span","PlayInning","props","currInning","setCurrInning","inningTop","setInningTop","isDefense","setIsDefense","playPitch","dispatch","randomHit","random","Math","getRandomNum","StadiumDiv","PlayDiv","PlayBoardDiv","PlayBoard","BoardTag","M","BoardNum","PlayerDiv","Player","PlayButton","button","Stadium","PlayBoardTemp","arr","Array","fill","setTimeout","onClick","CurrentPlayerDiv","PlayerName","PitcherNum","yellow","PlayerRatio","PlayerTag","CurrentPlayer","awayTeam","currPitcher","setCurrPitcher","homeTeamPitcher","players","filter","player","pitcher","awayTeamPitcher","name","backNumber","PlayScreenDiv","PlayScreen","setMyTeam","setMyTeamName","setCounterTeam","setCounterTeamName","teamName","Caption","message","PlayableContext","playable","XL","darkGray","Team","game","setPlayable","setAwayTeam","setHomeTeam","setIsHome","history","useHistory","handleClickTeam","a","teamId","homeTeamId","awayTeamId","axios","get","gameId","data","homeInfo","userSelected","push","awayTeamName","homeTeamName","GameLi","li","Wrapper","MatchNumber","Versus","Game","GameUl","ul","GamesWrapper","GameList","games","setGames","fetchData","StartDiv","StartScreen","yellowOrange","START","AppDiv","GlobalStyle","createGlobalStyle","App","useReducer","counterTeam","currTeamLog","setCurrTeamLog","baseballState","teamInfo","Provider","value","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e11c5116.chunk.js","sourcesContent":["const ballReducer = (ballCnt, action) => {\n  switch (action.type) {\n    case 'hitS':\n      return { ...ballCnt, S: ballCnt.S + 1 };\n\n    case 'hitB':\n      return { ...ballCnt, B: ballCnt.B + 1 };\n\n    case 'hitO':\n      return {\n        ...ballCnt,\n        S: 0,\n        B: 0,\n        O: ballCnt.O + 1,\n        HitInfo: action.payload,\n      };\n\n    case 'hitH':\n      return {\n        ...ballCnt,\n        S: 0,\n        B: 0,\n        H: ballCnt.H + 1,\n      };\n\n    case 'resetAll':\n      return { ...ballCnt, S: 0, B: 0, O: 0, H: 0 };\n\n    case 'hitInfo':\n      return { ...ballCnt, HitInfo: action.payload };\n\n    default:\n      return null;\n  }\n};\n\nexport default ballReducer;\n","import { createContext } from 'react';\n\nconst boardHistory = {\n  S: 0,\n  B: 0,\n  O: 0,\n  H: 0,\n  HitInfo: ' ',\n};\n\nconst BoardHistoryContext = createContext();\n\nexport { boardHistory, BoardHistoryContext };\n","import styled from 'styled-components';\n\nconst Title = ({ type }) => (\n  <TitleDiv type={type}>BASEBALL GAME ONLINE</TitleDiv>\n);\n\nconst TitleDiv = styled.div`\n  margin: 18px 0;\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme, type }) =>\n    type === theme.screenType.PLAY ? theme.fontSizes.S : theme.fontSizes.XXL};\n  font-weight: 600;\n`;\n\nexport default Title;\n","import Title from '../startScreen/Title';\nimport styled from 'styled-components';\nimport { useContext } from 'react';\nimport { GlobalContext } from '../../App';\n\nconst Score = () => {\n  const { isHome, myTeamName, counterTeamName } = useContext(GlobalContext);\n\n  return (\n    <ScoreDiv>\n      <Title type='play' />\n      <TeamDiv>\n        <TeamSingleDiv>\n          {/* <AwayTeam>{counterTeamName}</AwayTeam> */}\n          {!isHome ? (\n            <AwayTeam>{myTeamName}</AwayTeam>\n          ) : (\n            <AwayTeam>{counterTeamName}</AwayTeam>\n          )}\n\n          {!isHome && <TeamCurrent>Player</TeamCurrent>}\n        </TeamSingleDiv>\n        <TeamScore>1</TeamScore>\n        <VSDiv>vs</VSDiv>\n        <TeamScore>5</TeamScore>\n        <TeamSingleDiv>\n          {/* <HomeTeam>Marvel</HomeTeam> */}\n          {isHome ? (\n            <HomeTeam>{myTeamName}</HomeTeam>\n          ) : (\n            <HomeTeam>{counterTeamName}</HomeTeam>\n          )}\n          {isHome && <TeamCurrent>Player</TeamCurrent>}\n        </TeamSingleDiv>\n      </TeamDiv>\n    </ScoreDiv>\n  );\n};\n\nconst ScoreDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-bottom: solid 4px white;\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nconst TeamDiv = styled.div`\n  display: flex;\n  font-size: ${({ theme }) => theme.fontSizes.XXL};\n  font-weight: 800;\n`;\n\nconst TeamSingleDiv = styled.div`\n  text-align: center;\n`;\nconst AwayTeam = styled.div``;\n\nconst HomeTeam = styled.div``;\n\nconst TeamScore = styled.div`\n  margin: 0 30px;\n`;\n\nconst TeamCurrent = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n  color: ${({ theme }) => theme.colors.orange};\n`;\n\nconst VSDiv = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.L};\n  color: ${({ theme }) => theme.colors.lightGray};\n`;\n\nexport default Score;\n","import styled from 'styled-components';\nimport { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../../App';\nimport { BoardHistoryContext } from '../provider/Context';\n\nconst LogList = () => {\n  const { ballCnt } = useContext(BoardHistoryContext);\n  const {\n    homeTeam,\n    myTeam,\n    currHitter,\n    setCurrHitter,\n    totalOutCount,\n    setTotalOutCount,\n  } = useContext(GlobalContext);\n  const [logArr, setLogArr] = useState([]);\n  const [batOrder, setBatOrder] = useState(1);\n  console.log('⭐️', myTeam);\n\n  useEffect(() => {\n    setLogArr((logArr) => [...logArr, ballCnt]);\n    if (ballCnt.HitInfo === 'O') {\n      // console.log('현재 타자!', currHitter.id, currHitter);\n      console.log('토탈!', totalOutCount);\n      setTotalOutCount((totalOutCount) => totalOutCount + 1);\n      console.log('이제 하나씩 올렷다', totalOutCount);\n    }\n    if (ballCnt.HitInfo === 'H') {\n      //한박자 느린 Hitter 변경\n      //아웃과 안타시 타자 변경\n      console.log('🔥현재나의타자정보번호', currHitter, 'BBBb', batOrder);\n      setCurrHitter({ ...currHitter, hit: currHitter.hit + 1 });\n      setBatOrder((batOrder) => batOrder + 1);\n      console.log('batOrder 바뀌지않앗겟지', batOrder);\n      //myTeam으로 가져올지 homeTeam으로 가져올지 모그렛음\n      setCurrHitter(myTeam[batOrder]);\n      console.log('⭐️현재나의타자정보번호', currHitter, 'BBB', batOrder);\n    }\n  }, [ballCnt]);\n\n  const LogCards = () => {\n    console.log('============================', logArr);\n    return logArr.map((ele, i) => {\n      // console.log('logarr 하ㅏ나식', ele);\n      if (ele.HitInfo !== ' ' && (ele.HitInfo === 'S' || ele.HitInfo === 'B')) {\n        return (\n          <LogLine key={i}>\n            <LogIdx>{i}</LogIdx>\n            <LogName>{ele.HitInfo === 'S' ? '스트라이크' : '볼'}</LogName>\n            <LogBoard>\n              S{ele.S} B{ele.B}\n            </LogBoard>\n          </LogLine>\n        );\n      }\n\n      if (ele.HitInfo === 'O') {\n        // setTotalOutCount((prevCnt) => prevCnt + 1);\n        // console.log('토탈아웃', totalOutCount);\n        return <LogLineMsg key={i}>⚾️ 아웃 ⚾️</LogLineMsg>;\n      }\n      if (ele.HitInfo === 'H') {\n        // console.log(myTeam);\n        return <LogLineMsg key={i}>🥎 안타 🥎</LogLineMsg>;\n      }\n    });\n  };\n\n  return (\n    <LogListDiv>\n      <LogBox>\n        <LogHitter>7번타자 류현진</LogHitter>\n        <LogCards />\n      </LogBox>\n    </LogListDiv>\n  );\n};\n\nconst LogListDiv = styled.div`\n  padding: 20px 20px;\n  border: solid 4px white;\n  border-top: none;\n  border-right: none;\n`;\nconst LogBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 550px;\n  font-size: ${({ theme }) => theme.fontSizes.XXS};\n  overflow: auto;\n`;\nconst LogHitter = styled.div`\n  margin: 10px 0;\n  color: ${({ theme }) => theme.colors.green};\n`;\nconst LogIdx = styled.div`\n  width: 18px;\n  height: 18px;\n  padding: 2px 6px 0 6px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.black};\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 20px;\n  font-size: ${({ theme }) => theme.fontSizes.TXS};\n  font-weight: 700;\n`;\nconst LogName = styled.div`\n  width: 110px;\n  margin-right: 30px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.white};\n`;\nconst LogBoard = styled.div`\n  width: 52px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.lightGray};\n  font-weight: 500;\n`;\nconst LogLine = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 7px 0;\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nconst LogLineMsg = styled.div`\n  padding: 0 0 0 40px;\n  color: ${({ theme }) => theme.colors.gray};\n`;\n\nexport default LogList;\n","import { useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { GlobalContext } from '../../App';\n\nconst PlayInning = (props) => {\n  const {\n    currInning,\n    setCurrInning,\n    totalOutCount,\n    setTotalOutCount,\n    inningTop,\n    setInningTop,\n    isDefense,\n    setIsDefense,\n  } = useContext(GlobalContext);\n\n  if (totalOutCount === 0) {\n    setInningTop(true);\n  }\n\n  if (totalOutCount >= 3) {\n    if (totalOutCount === 3) {\n      setInningTop(false);\n      // 공격, 수비를 바꿔주는 로직 추가하기\n    }\n    if (totalOutCount === 6) {\n      setCurrInning(currInning + 1);\n      setTotalOutCount(0);\n    }\n  }\n  return (\n    <PlayInningDiv>\n      <Span>\n        {currInning}회{inningTop ? '초' : '말'} {isDefense ? '수비' : '공격'}\n      </Span>\n    </PlayInningDiv>\n  );\n};\n\nconst PlayInningDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n  padding: 5px 12px;\n  border: dotted 2px white;\n  border-radius: 0.5rem;\n  height: fit-content;\n`;\n\nconst Span = styled.span`\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme }) => theme.fontSizes.S};\n  font-weight: 700;\n`;\n\nexport default PlayInning;\n","import styled from 'styled-components';\nimport { useEffect, useContext } from 'react';\nimport { BoardHistoryContext } from '../provider/Context';\nimport PlayInning from './PlayInning';\n\nconst Stadium = () => {\n  const { ballCnt, dispatch } = useContext(BoardHistoryContext);\n  const PlayBoardTemp = ({ type }) => {\n    if (type === 'S') {\n      const arr = new Array(ballCnt.S).fill(' 🟡');\n      return <>{arr}</>;\n    } else if (type === 'B') {\n      const arr = new Array(ballCnt.B).fill(' 🟢');\n      return <>{arr}</>;\n    } else if (type === 'O') {\n      const arr = new Array(ballCnt.O).fill(' 🔴');\n      return <>{arr}</>;\n    }\n  };\n\n  useEffect(() => {\n    if (ballCnt.S === 3) {\n      setTimeout(() => dispatch({ type: 'hitO', payload: 'O' }), 1000);\n    }\n    if (ballCnt.B === 4) {\n      setTimeout(() => dispatch({ type: 'hitH', payload: 'H' }), 1000);\n    }\n    if (ballCnt.O === 3) {\n      setTimeout(() => dispatch({ type: 'resetAll' }), 1000);\n    }\n  }, [ballCnt]);\n\n  return (\n    <StadiumDiv>\n      <PlayDiv>\n        <PlayBoardDiv>\n          <PlayBoard>\n            <BoardTag>S</BoardTag>\n            <BoardNum>\n              <PlayBoardTemp type='S' />\n            </BoardNum>\n          </PlayBoard>\n          <PlayBoard>\n            <BoardTag>B</BoardTag>\n            <BoardNum>\n              <PlayBoardTemp type='B' />\n            </BoardNum>\n          </PlayBoard>\n          <PlayBoard>\n            <BoardTag>O</BoardTag>\n            <BoardNum>\n              <PlayBoardTemp type='O' />\n            </BoardNum>\n          </PlayBoard>\n        </PlayBoardDiv>\n        <PlayInning />\n      </PlayDiv>\n      <PlayerDiv>\n        <Player />\n      </PlayerDiv>\n      <PlayButton onClick={() => playPitch(ballCnt, dispatch)}>\n        PITCH\n      </PlayButton>\n    </StadiumDiv>\n  );\n};\n\nconst playPitch = (ballCnt, dispatch) => {\n  const tempBoardLst = ['S', 'B', 'H'];\n  const getRandomNum = () => {\n    const random = Math.random() * 10;\n    if (random >= 3) return 0;\n    if (random >= 1) return 1;\n    return 2;\n  };\n  const randomHit = tempBoardLst[getRandomNum()];\n\n  dispatch({ type: 'hitInfo', payload: randomHit });\n  dispatch({ type: 'hit' + randomHit });\n};\n\nconst StadiumDiv = styled.div`\n  box-sizing: border-box;\n  opacity: 90%;\n  background-image: url('./baseballRound.jpg');\n  background-position: center;\n`;\nconst PlayDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst PlayBoardDiv = styled.div`\n  margin: 20px 25px;\n`;\nconst PlayBoard = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BoardTag = styled.div`\n  margin-right: 20px;\n  color: white;\n  font-size: ${({ theme }) => theme.fontSizes.M};\n  font-weight: 600;\n`;\nconst BoardNum = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.S};\n`;\nconst PlayerDiv = styled.div`\n  position: absolute;\n`;\nconst Player = styled.div`\n  position: relative;\n`;\nconst PlayButton = styled.button`\n  position: relative;\n  left: 465px;\n  top: 130px;\n  padding: 10px 40px;\n  text-align: center;\n  background-color: black;\n  color: ${({ theme }) => theme.colors.white};\n  border: dotted 2px white;\n  border-radius: 0.5rem;\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n  opacity: 80%;\n  cursor: pointer;\n  &:hover {\n    opacity: none;\n    background-color: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\n\nexport default Stadium;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { GlobalContext } from '../../App';\n\nconst CurrentPlayer = () => {\n  const {\n    homeTeam,\n    awayTeam,\n    inningTop,\n    currPitcher,\n    setCurrPitcher,\n  } = useContext(GlobalContext);\n\n  const homeTeamPitcher = homeTeam.players.filter(\n    (player) => player.pitcher === true\n  )[0];\n  const awayTeamPitcher = awayTeam.players.filter(\n    (player) => player.pitcher === true\n  )[0];\n\n  setCurrPitcher(inningTop ? homeTeamPitcher : awayTeamPitcher);\n\n  return (\n    <CurrentPlayerDiv>\n      <PlayerTag>PITCHER</PlayerTag>\n      <Player>\n        <PlayerName>{currPitcher?.name}</PlayerName>\n        <PitcherNum>#{currPitcher?.backNumber}</PitcherNum>\n      </Player>\n      <PlayerTag>HITTER</PlayerTag>\n      <Player>\n        <PlayerName>캡틴아메</PlayerName>\n        <PlayerRatio>1타석 0안타</PlayerRatio>\n      </Player>\n    </CurrentPlayerDiv>\n  );\n};\n\nconst CurrentPlayerDiv = styled.div`\n  display: grid;\n  align-items: center;\n  padding: 20px 30px;\n  border: solid 4px white;\n  border-top: none;\n  border-right: none;\n`;\nconst Player = styled.div`\n  padding: 8px 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  text-align: center;\n`;\nconst PlayerName = styled.div`\n  color: ${({ theme }) => theme.colors.gray};\n  font-size: ${({ theme }) => theme.fontSizes.XXS};\n`;\nconst PitcherNum = styled.div`\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n`;\nconst PlayerRatio = styled.div`\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n`;\nconst PlayerTag = styled.div`\n  padding: 3px;\n  border: dotted 2px white;\n  border-radius: 0.5rem;\n  text-align: center;\n  color: white;\n  font-size: ${({ theme }) => theme.fontSizes.XS};\n`;\n\nexport default CurrentPlayer;\n","import styled from 'styled-components';\nimport Score from '../components/playScreen/Score';\nimport LogList from '../components/playScreen/LogList';\nimport Stadium from '../components/playScreen/Stadium';\nimport CurrentPlayer from '../components/playScreen/CurrentPlayer';\nimport { useEffect, useContext } from 'react';\nimport { GlobalContext } from '../App';\n\nconst PlayScreen = (props) => {\n  const {\n    isHome,\n    homeTeam,\n    awayTeam,\n    setMyTeam,\n    setMyTeamName,\n    setCounterTeam,\n    setCounterTeamName,\n    setCurrHitter,\n  } = useContext(GlobalContext);\n  useEffect(() => setCurrHitter(homeTeam.players[0]), []);\n  if (isHome) {\n    setMyTeam(homeTeam.players);\n    setMyTeamName(homeTeam.teamName);\n    setCounterTeam(awayTeam.players);\n    setCounterTeamName(awayTeam.teamName);\n    // setCurrHitter(homeTeam.players[0]);\n    // setIsDefense(isHome);\n  } else {\n    setMyTeam(awayTeam.players);\n    setMyTeamName(awayTeam.teamName);\n    setCounterTeam(homeTeam.players);\n    setCounterTeamName(homeTeam.teamName);\n  }\n  return (\n    <PlayScreenDiv>\n      <Score />\n      <CurrentPlayer />\n      <Stadium />\n      <LogList />\n    </PlayScreenDiv>\n  );\n};\n\nconst PlayScreenDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1100px 300px;\n  grid-template-rows: 200px 600px;\n  width: 1400px;\n  height: 800px;\n  border: 0.5rem outset #ffffff;\n  border-radius: 12px;\n  outline-offset: 0.5rem;\n`;\n\nexport default PlayScreen;\n","import styled from 'styled-components';\nimport { useContext } from 'react';\nimport { PlayableContext } from '../../App';\n\nconst Caption = (props) => {\n  const { playable } = useContext(PlayableContext);\n  let message = '참가할 게임을 선택하세요!';\n  if (playable === false) {\n    message = '이미 선택된 팀입니다. 다른 팀을 선택해주세요!';\n  }\n  return <Span>{message}</Span>;\n};\n\nconst Span = styled.span`\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nexport default Caption;\n","import styled from 'styled-components';\nimport { useHistory } from 'react-router';\nimport { useContext } from 'react';\nimport { GlobalContext, PlayableContext } from '../../App';\nimport axios from 'axios';\n\nconst Team = ({ type, game }) => {\n  const { setPlayable } = useContext(PlayableContext);\n  const { setAwayTeam, setHomeTeam, setIsHome } = useContext(GlobalContext);\n  const history = useHistory();\n  const handleClickTeam = async () => {\n    let teamId;\n    if (type === 'home') {\n      teamId = game.homeTeamId;\n    } else {\n      teamId = game.awayTeamId;\n    }\n    try {\n      const { data } = await axios.get(\n        `http://13.209.109.186/baseball/games/${game.gameId}/${teamId}`\n      );\n      const [awayInfo, homeInfo] = [data.awayTeam, data.homeTeam];\n      setAwayTeam(awayInfo);\n      setHomeTeam(homeInfo);\n      homeInfo.userSelected && setIsHome(true);\n      history.push('/play-screen');\n    } catch {\n      setPlayable(false);\n    }\n  };\n\n  return type === 'away' ? (\n    <TeamDiv type={type} onClick={handleClickTeam}>\n      {game.awayTeamName}\n    </TeamDiv>\n  ) : (\n    <TeamDiv type={type} onClick={handleClickTeam}>\n      {game.homeTeamName}\n    </TeamDiv>\n  );\n};\n\nconst TeamDiv = styled.div`\n  /* font-size: ${({ theme }) => theme.fontSizes.XL}; */\n  font-size: 32px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.darkGray};\n  width: 180px;\n  text-align: ${({ type }) => (type === 'home' ? 'left' : 'right')};\n\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.green};\n  }\n`;\n\nexport default Team;\n","import styled from 'styled-components';\nimport Team from './Team';\n\nconst Game = ({ game }) => {\n  return (\n    <GameLi>\n      <Wrapper>\n        <MatchNumber>GAME {game.gameId}</MatchNumber>\n      </Wrapper>\n      <Wrapper>\n        <Team type='away' game={game} />\n        <Versus>vs</Versus>\n        <Team type='home' game={game} />\n      </Wrapper>\n    </GameLi>\n  );\n};\n\nconst GameLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.lightGray};\n  width: 100%;\n  height: 100px;\n  border-radius: 14px;\n  margin-bottom: 10px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst MatchNumber = styled.span`\n  color: red;\n  margin-bottom: 6px;\n`;\n\nconst Versus = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.XL};\n  margin: 0 40px;\n  display: flex;\n  align-items: center;\n  font-weight: bolder;\n  color: ${({ theme }) => theme.colors.gray};\n`;\nexport default Game;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Game from './Game';\n\nconst GameList = (props) => {\n  const [games, setGames] = useState([]);\n  const fetchData = async () => {\n    const { data: games } = await axios.get(\n      'http://13.209.109.186/baseball/games'\n    );\n    setGames(games);\n  };\n\n  useEffect(fetchData, []);\n\n  return (\n    <GameUl>\n      <GamesWrapper>\n        {games.map((game) => (\n          <Game key={game.gameId} game={game} />\n        ))}\n      </GamesWrapper>\n    </GameUl>\n  );\n};\n\nconst GameUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst GamesWrapper = styled.div`\n  width: 540px;\n  height: 320px;\n  overflow-y: scroll;\n`;\n\nexport default GameList;\n","import Caption from '../components/startScreen/Caption';\nimport GameList from '../components/startScreen/GameList';\nimport Title from '../components/startScreen/Title';\nimport styled from 'styled-components';\n\nconst StartScreen = (props) => {\n  return (\n    <StartDiv>\n      <Title />\n      <Caption />\n      <GameList />\n    </StartDiv>\n  );\n};\n\nconst StartDiv = styled.div`\n  margin: 0 auto;\n  max-width: 1440px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport default StartScreen;\n","const theme = {\n  fontSizes: {\n    TXS: '15px',\n    XXS: '20px',\n    XS: '25px',\n    S: '30px',\n    M: '35px',\n    L: '40px',\n    XL: '45px',\n    XXL: '50px',\n  },\n  colors: {\n    white: '#FFF',\n    black: '#333',\n    green: '#4f9202',\n    yellow: '#dec170',\n    yellowOrange: '#eabd57',\n    orange: '#eaa719',\n    gray: '#dbd6c3',\n    darkGray: '#333',\n    lightGray: '#bdbdbd',\n  },\n\n  screenType: {\n    START: 'start',\n    PLAY: 'play',\n  },\n};\n\nexport default theme;\n","import { useReducer, useState, createContext } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport ballReducer from './components/reducer/ballReducer';\nimport {\n  boardHistory,\n  BoardHistoryContext,\n} from './components/provider/Context';\nimport './App.css';\nimport PlayScreen from './routes/PlayScreen';\nimport StartScreen from './routes/StartScreen';\nimport theme from './theme';\nimport useToggle from './components/hooks/useToggle';\n\nfunction App() {\n  const [ballCnt, dispatch] = useReducer(ballReducer, boardHistory);\n  const [playable, setPlayable] = useState(true);\n  const [myTeam, setMyTeam] = useState([]);\n  const [myTeamName, setMyTeamName] = useState('');\n  const [counterTeam, setCounterTeam] = useState([]);\n  const [counterTeamName, setCounterTeamName] = useState('');\n  const [homeTeam, setHomeTeam] = useState(null);\n  const [awayTeam, setAwayTeam] = useState(null);\n  const [currInning, setCurrInning] = useState(1);\n  const [currPitcher, setCurrPitcher] = useState(null);\n  const [currHitter, setCurrHitter] = useState(null);\n  const [currTeamLog, setCurrTeamLog] = useState([]);\n  const [isHome, setIsHome] = useState(false);\n  const [totalOutCount, setTotalOutCount] = useState(0);\n  const [isDefense, setIsDefense] = useState(false);\n  const [inningTop, setInningTop] = useState(true);\n\n  const baseballState = {\n    teamInfo: {\n      myTeam,\n      setMyTeam,\n      myTeamName,\n      setMyTeamName,\n      counterTeam,\n      setCounterTeam,\n      counterTeamName,\n      setCounterTeamName,\n      homeTeam,\n      setHomeTeam,\n      awayTeam,\n      setAwayTeam,\n      currPitcher,\n      setCurrPitcher,\n      currHitter,\n      setCurrHitter,\n      currInning,\n      setCurrInning,\n      currTeamLog,\n      setCurrTeamLog,\n      isHome,\n      setIsHome,\n      totalOutCount,\n      setTotalOutCount,\n      isDefense,\n      setIsDefense,\n      inningTop,\n      setInningTop,\n    },\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalContext.Provider value={baseballState.teamInfo}>\n        <PlayableContext.Provider value={{ playable, setPlayable }}>\n          <GlobalStyle />\n          <BrowserRouter>\n            <Switch>\n              <AppDiv>\n                <Route path='/' exact>\n                  <StartScreen />\n                </Route>\n                <BoardHistoryContext.Provider value={{ ballCnt, dispatch }}>\n                  <Route path='/play-screen'>\n                    <PlayScreen />\n                  </Route>\n                </BoardHistoryContext.Provider>\n              </AppDiv>\n            </Switch>\n          </BrowserRouter>\n        </PlayableContext.Provider>\n      </GlobalContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nconst AppDiv = styled.div`\n  margin: 50px auto;\n  max-width: 1440px;\n`;\nconst GlobalStyle = createGlobalStyle`\n* {\n  padding:0; \n  margin:0;\n}\n\nbody{\n  box-sizing:border-box;\n  background-color:black;\n}\n\nol, ul {\n  list-style: none;\n}\n`;\n\nexport const PlayableContext = createContext();\nexport const GlobalContext = createContext();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}